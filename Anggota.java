/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dbl_uts;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author M. HASNAN AL ABIYYU
 */
public class Anggota extends javax.swing.JFrame {

    private final Connection Connection = ConnectDb.getConnectDb().getConnection();
    private final ArrayList<String[]> dataList = new ArrayList<>();
    private final String[] columns = {"id_anggota", "nama", "alamat"};

    private final Connection connection = ConnectDb.getConnectDb().getConnection();

    public Anggota() {
        initComponents();
        getAllData();
        refreshModel();
        id_auto();
    }

    public final void getAllData() {
        try {
            dataList.clear();
            String sql = "SELECT * FROM anggota;";
            PreparedStatement ps = Connection.prepareStatement(sql);
            ps.execute();
            final ResultSet data = ps.getResultSet();
            while (data.next()) {
                final String[] row = new String[]{
                    data.getString("id_anggota"),
                    data.getString("nama"),
                    data.getString("alamat"),};
                    dataList.add(row);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        JFrame frame = new JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        // frame.add(new JScrollPane(table));
        frame.pack();
        frame.setVisible(true);

    }

    public final void refreshModel() {
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        for (String[] data : dataList) {
            model.addRow(data);
        }
        tblanggota.setModel(model);
    }
    
        public final void id_auto() {
        try {
            final Statement stat = connection.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            final String sql = "select max (right(id_anggota, 1)) as no from anggota";
            final ResultSet rs = stat.executeQuery(sql);
            while (rs.next()) {
                if (rs.first() == false) {
                    txtidanggota.setText("ANG0001");
                } else {
                    rs.last();
                    int set_id = rs.getInt(1) + 1;
                    String no = String.valueOf(set_id);
                    int id_next = no.length();
                    for (int a = 0; a < 4 - id_next; a++) {
                        no = "0" + no;
                    }
                    txtidanggota.setText("ANG" + no);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Anggota.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
        public void cari() {
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("id_anggota");
        tbl.addColumn("nama");
        tbl.addColumn("alamat");

        try {
            String sql = "Select*from anggota where nama like '%" + txtcarianggota.getText() + "%'";
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                tbl.addRow(new Object[]{
                    rs.getString("id_anggota"),
                    rs.getString("nama"),
                    rs.getString("alamat"),
                });
                tblanggota.setModel(tbl);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Anggota.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblanggotaperpus = new javax.swing.JLabel();
        lblidanggota = new javax.swing.JLabel();
        lblnamaanggota = new javax.swing.JLabel();
        lblalamatanggota = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblanggota = new javax.swing.JTable();
        btnsimpananggota = new javax.swing.JButton();
        btnupdateanggota = new javax.swing.JButton();
        btnhapusanggota = new javax.swing.JButton();
        btncarianggota = new javax.swing.JButton();
        txtcarianggota = new javax.swing.JTextField();
        txtidanggota = new javax.swing.JTextField();
        txtnamaanggota = new javax.swing.JTextField();
        txtalamatanggota = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        lblanggotaperpus.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblanggotaperpus.setText("ANGGOTA  PERPUSTAAKAAN");

        lblidanggota.setText("ID ANGGOTA");

        lblnamaanggota.setText("NAMA ANGGOTA");

        lblalamatanggota.setText("ALAMAT");

        tblanggota.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblanggota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblanggotaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblanggota);

        btnsimpananggota.setText("Simpan");
        btnsimpananggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsimpananggotaActionPerformed(evt);
            }
        });

        btnupdateanggota.setText("Update");
        btnupdateanggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateanggotaActionPerformed(evt);
            }
        });

        btnhapusanggota.setText("Hapus");
        btnhapusanggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhapusanggotaActionPerformed(evt);
            }
        });

        btncarianggota.setText("Cari");
        btncarianggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncarianggotaActionPerformed(evt);
            }
        });

        txtidanggota.setDragEnabled(true);
        txtidanggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidanggotaActionPerformed(evt);
            }
        });

        jLabel1.setText("*masukkan nama");

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(btnback)
                        .addGap(18, 18, 18)
                        .addComponent(lblanggotaperpus, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(152, 152, 152)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblnamaanggota)
                                .addComponent(lblidanggota)
                                .addComponent(lblalamatanggota)
                                .addComponent(btnsimpananggota))
                            .addGap(12, 12, 12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtidanggota, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtalamatanggota, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                                    .addComponent(txtnamaanggota, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnupdateanggota)
                                    .addGap(26, 26, 26)
                                    .addComponent(btnhapusanggota)
                                    .addGap(31, 31, 31)
                                    .addComponent(btncarianggota)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtcarianggota, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)))))))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(lblanggotaperpus, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnback)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtidanggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtnamaanggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtalamatanggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblalamatanggota)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblidanggota)
                        .addGap(24, 24, 24)
                        .addComponent(lblnamaanggota)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnupdateanggota)
                    .addComponent(btnhapusanggota)
                    .addComponent(btncarianggota)
                    .addComponent(txtcarianggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsimpananggota))
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtidanggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidanggotaActionPerformed
        // TODO add your handling code here:
        setEnabled(false);
    }//GEN-LAST:event_txtidanggotaActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        txtidanggota.setEditable(false);
    }//GEN-LAST:event_formComponentShown

    private void btnsimpananggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsimpananggotaActionPerformed
        // TODO add your handling code here:
        try {
            final String sql = "INSERT INTO anggota(id_anggota, nama, alamat) VALUES (?,?,?)";
            final PreparedStatement ps = connection.prepareStatement(sql);
            if (txtidanggota.getText().isEmpty() || txtnamaanggota.getText().isEmpty() || txtalamatanggota.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Isi Semua Kolom terlebih dahulu");
            } else {
                ps.setString(1, txtidanggota.getText());
                ps.setString(2, txtnamaanggota.getText());
                ps.setString(3, txtalamatanggota.getText());
                ps.execute();
                JOptionPane.showMessageDialog(null, "Berhasil di simpan");
            }
            this.getAllData();
            this.refreshModel();
            this.id_auto();
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "gagal disimpan");
            System.out.println(e.getMessage());
        }
        txtnamaanggota.setText("");
        txtalamatanggota.setText("");
    }//GEN-LAST:event_btnsimpananggotaActionPerformed

    private void btnupdateanggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateanggotaActionPerformed
        // TODO add your handling code here:
        String idAnggota = txtidanggota.getText();
        String nama = txtnamaanggota.getText();
        String alamat = txtalamatanggota.getText();
        try {
            final String sql = "Update anggota set nama= ?, alamat =? where id_anggota= ?";
            final PreparedStatement pst = connection.prepareStatement(sql);
            pst.setString(1, nama);
            pst.setString(2, alamat);
            pst.setString(3, idAnggota);
            pst.executeUpdate();

            this.getAllData();
            this.refreshModel();
            this.id_auto();

            JOptionPane.showMessageDialog(this, "Berhasil Memperbarui");
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal Memperbarui");
        }
        txtnamaanggota.setText("");
        txtalamatanggota.setText("");
    }//GEN-LAST:event_btnupdateanggotaActionPerformed

    private void tblanggotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblanggotaMouseClicked
        // TODO add your handling code here:
        int row = tblanggota.getSelectedRow();
        txtidanggota.setText(tblanggota.getValueAt(row, 0).toString());
        txtnamaanggota.setText(tblanggota.getValueAt(row, 1).toString());
        txtalamatanggota.setText(tblanggota.getValueAt(row, 2).toString());
    }//GEN-LAST:event_tblanggotaMouseClicked

    private void btnhapusanggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhapusanggotaActionPerformed
        // TODO add your handling code here:
        try {
            String id_anggota = !txtidanggota.getText().trim().isEmpty() ? txtidanggota.getText().trim() : tblanggota.getValueAt(tblanggota.getSelectedRow(), 0).toString();
            String sql = "delete from anggota where id_anggota = ?";
            PreparedStatement ps = Connection.prepareStatement(sql);
            ps.setString(1, id_anggota);
            ps.execute();
            this.getAllData();
            this.refreshModel();
            this.id_auto();

            JOptionPane.showMessageDialog(this, "Data behasil dihapus");
        } catch (SQLException | ArrayIndexOutOfBoundsException ex) {
            System.out.println(ex.getMessage());
        }

        txtnamaanggota.setText("");
        txtalamatanggota.setText("");
    }//GEN-LAST:event_btnhapusanggotaActionPerformed

    private void btncarianggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncarianggotaActionPerformed
        // TODO add your handling code here:
        this.cari();
    }//GEN-LAST:event_btncarianggotaActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        TampilanAwal frame = new TampilanAwal();
        frame.setVisible(true);
    }//GEN-LAST:event_btnbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Anggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Anggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Anggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Anggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Anggota().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btncarianggota;
    private javax.swing.JButton btnhapusanggota;
    private javax.swing.JButton btnsimpananggota;
    private javax.swing.JButton btnupdateanggota;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblalamatanggota;
    private javax.swing.JLabel lblanggotaperpus;
    private javax.swing.JLabel lblidanggota;
    private javax.swing.JLabel lblnamaanggota;
    private javax.swing.JTable tblanggota;
    private javax.swing.JTextField txtalamatanggota;
    private javax.swing.JTextField txtcarianggota;
    private javax.swing.JTextField txtidanggota;
    private javax.swing.JTextField txtnamaanggota;
    // End of variables declaration//GEN-END:variables
}
